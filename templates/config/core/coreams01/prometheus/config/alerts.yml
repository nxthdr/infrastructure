groups:
- name: recording-rules
  interval: 30s
  rules:
  # Record all instances that have reported metrics in the last 5 minutes
  # This creates a baseline of "known" instances
  - record: instance:up:last_seen
    expr: |
      max_over_time(up[5m]) or on() vector(0)

- name: core-service-down
  rules:
  - alert: Core_Service_Proxy_Down
    expr: up{job="proxy"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down in {{ $labels.instance }}'

  - alert: Core_Service_Redpanda_Down
    expr: up{job="redpanda"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Clickhouse_Down
    expr: up{job="clickhouse"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Chproxy_Down
    expr: up{job="chproxy"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Loki_Down
    expr: up{job="loki"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Grafana_Down
    expr: up{job="grafana"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Risotto_Down
    expr: up{job="risotto"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

  - alert: Core_Service_Goflow_Down
    expr: up{job="goflow"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'core service {{ $labels.job }} is down'

- name: host
  rules:
  - alert: Host_Disk_Full
    expr: node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"} * 100 < 10
    for: 1m
    labels:
      severity: warning
    annotations:
      title: host disk is almost full in {{ $labels.instance }}

  - alert: Host_Out_Of_Memory
    expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: host almost out of memory in {{ $labels.instance }}

- name: monitoring-down
  rules:
  # Generic alert for any monitoring service that stops reporting
  # This works for both scraped and remote_write targets
  - alert: Monitoring_Service_Down
    expr: |
      (instance:up:last_seen{job=~"alloy|node-exporter|cadvisor"} == 1)
      unless
      (up{job=~"alloy|node-exporter|cadvisor"} == 1)
    for: 3m
    labels:
      severity: warning
    annotations:
      title: 'monitoring service {{ $labels.job }} is down in {{ $labels.instance }}'
      description: 'The {{ $labels.job }} service on {{ $labels.instance }} has stopped reporting metrics for more than 3 minutes.'

- name: risotto
  rules:
  - alert: Risotto_No_BGP_Peers
    expr: absent(risotto_peer_established)
    for: 1m
    labels:
      severity: critical
    annotations:
      title: 'risotto reports no BGP peers'

- name: saimiris
  rules:
  - alert: Probing_Service_Saimiris_Down
    expr: |
      (instance:up:last_seen{job="saimiris"} == 1)
      unless
      (up{job="saimiris"} == 1)
    for: 3m
    labels:
      severity: warning
    annotations:
      title: 'probing service {{ $labels.job }} is down in {{ $labels.instance }}'
      description: 'The Saimiris probing service on {{ $labels.instance }} has stopped reporting metrics for more than 3 minutes.'
