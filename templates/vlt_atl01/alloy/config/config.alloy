// Syslog configuration
discovery.relabel "syslog" {
    targets = []

    rule {
        source_labels = ["__syslog_message_hostname"]
        target_label  = "host"
    }

    rule {
        source_labels = ["__syslog_message_hostname"]
        target_label  = "hostname"
    }

    rule {
        source_labels = ["__syslog_message_severity"]
        target_label  = "level"
    }

    rule {
        source_labels = ["__syslog_message_app_name"]
        target_label  = "application"
    }

    rule {
        source_labels = ["__syslog_message_facility"]
        target_label  = "facility"
    }

    rule {
        source_labels = ["__syslog_connection_hostname"]
        target_label  = "connection_hostname"
    }
}

loki.source.syslog "syslog" {
    listener {
        address      = "0.0.0.0:601"
        protocol     = "tcp"
        idle_timeout = "0s"
        use_rfc5424_message = true
        labels       = { job = "syslog", component = "loki.source.syslog", protocol = "tcp" }
        max_message_length = 0
    }
    listener {
        address      = "0.0.0.0:514"
        protocol     = "udp"
        idle_timeout = "0s"
        use_rfc5424_message = true
        labels       = { job = "syslog", component = "loki.source.syslog", protocol = "udp" }
        max_message_length = 0
    }
    forward_to    = [loki.write.syslog.receiver]
    relabel_rules = discovery.relabel.syslog.rules
}

loki.write "syslog" {
    endpoint {
        url = "https://loki.nxthdr.dev/loki/api/v1/push"

        // basic_auth {
        //  username = "admin"
        //  password = "admin"
        // }
    }
}

// Prometheus configuration
prometheus.remote_write "default" {
    endpoint {
        url = "https://prometheus.nxthdr.dev/api/v1/write"

        // basic_auth {
        //  username = "admin"
        //  password = "admin"
        // }
    }
}

prometheus.relabel "instance_relabel" {
    rule {
        source_labels = ["job"]
        target_label  = "job"
        replacement   = "node-exporter"
    }

    rule {
        source_labels = ["instance"]
        target_label  = "instance"
        replacement   = "vltatl01"
    }

    forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "node_exporter" {
    targets = [{
    __address__ = "node_exporter:9100",
    }]

    forward_to = [prometheus.relabel.instance_relabel.receiver]
}
